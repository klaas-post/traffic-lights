//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "OPC_UA_Interface"
	Revision           = "1.1"
	GUID               = "{D43DB66D-D305-4333-A9E1-7C340B5CB150}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(396,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{CF2DA953-F1CB-49E8-8AE7-2445EC9080CE}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="OPC_UA" Required="true" Internal="false"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.1" Date="2019-07-30" Author="FurLuk" Company="Sigmatek" Description="Added Callback Methods with ApplicationUri when a Client is creating and closing a session"/>
		<Dokumentation Revision="1.0" Date="2019-07-30" Author="HubChr" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
</Class>
*)
OPC_UA_Interface : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	OPC_UA 	: CltChCmd_OPC_UA;
  //Variables:
		usInitCnt 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment="Callback to the application. Is called each time an application certificate is activated, &#13;&#10;e.g. after booting or after creating a certificate via CreateApplCertificate()." Name="CB_CertificateLoaded"/>
	FUNCTION VIRTUAL GLOBAL CB_CertificateLoaded
		VAR_INPUT
			IF_Number 	: UDINT;
			ValidTo 	: DINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: DINT;
		END_VAR;
				//! <Function Comment="Callback to the application. Called when a new certificate is to be validated.&#13;&#10;The response can be made using the CertificateValidationFeedback () method." Name="CB_ValidateCertificate"/>
	FUNCTION VIRTUAL GLOBAL CB_ValidateCertificate
		VAR_INPUT
			certificateInfo 	: OPC_UA::ptrOpcUa_PkiCertificateInfo;
			identity 	: OPC_UA::ptrOpcUa_PkiIdentity;
			fileName 	: ^CHAR;
			certificateData 	: ^BYTE;
			certificateLength 	: DINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: DINT;
		END_VAR;
				//! <Function Comment="Callback to the application.&#13;&#10;Is called each time a Client is creating a session." Name="CB_CreateSession"/>
	FUNCTION VIRTUAL GLOBAL CB_CreateSession
		VAR_INPUT
			pApplicationUri 	: ^void;			//! <Variable Comment="pointer to the ApplicationUri of the client information" Name="CB_CreateSession.pApplicationUri"/>
		END_VAR;
				//! <Function Comment="Callback to the application.&#13;&#10;Is called each time a Client is closing a session." Name="CB_CloseSession"/>
	FUNCTION VIRTUAL GLOBAL CB_CloseSession
		VAR_INPUT
			pApplicationUri 	: ^void;			//! <Variable Comment="pointer to the ApplicationUri of the client information" Name="CB_CloseSession.pApplicationUri"/>
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd OPC_UA


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB OPC_UA_Interface::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_OPC_UA_INTERFACE
1$UINT, 1$UINT, (SIZEOF(::OPC_UA_Interface))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3165314723), "OPC_UA_Interface", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::OPC_UA_Interface.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::OPC_UA_Interface.OPC_UA.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1602850968), "OPC_UA", TO_UDINT(1602850968), "OPC_UA", 7$UINT, 2$UINT, 
END_FUNCTION


#define USER_CNT_OPC_UA_Interface 4

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_OPC_UA_Interface] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION OPC_UA_Interface::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_OPC_UA_Interface, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #CB_CertificateLoaded();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #CB_ValidateCertificate();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #CB_CreateSession();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #CB_CloseSession();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL OPC_UA_Interface::Init

  if usInitCnt = 1 then
    OPC_UA.RegisterInterfaceClass(this);
  end_if;
  
  usInitCnt += 1;

END_FUNCTION

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL OPC_UA_Interface::CB_CertificateLoaded
	VAR_INPUT
		IF_Number 	: UDINT;
		ValidTo 	: DINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: DINT;
	END_VAR

  retcode := 0;

END_FUNCTION
#pragma warning(default:73);

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL OPC_UA_Interface::CB_ValidateCertificate
	VAR_INPUT
		certificateInfo 	: OPC_UA::ptrOpcUa_PkiCertificateInfo;
		identity 	: OPC_UA::ptrOpcUa_PkiIdentity;
		fileName 	: ^CHAR;
		certificateData 	: ^BYTE;
		certificateLength 	: DINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: DINT;
	END_VAR
  
  // activate for auto-trusting
  // retcode := CertificateValidationFeedback(fileName, certificateData, certificateLength, Trust);  
  
  retcode := 0;

END_FUNCTION
#pragma warning(default:73);

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL OPC_UA_Interface::CB_CreateSession
	VAR_INPUT
		pApplicationUri 	: ^void;
	END_VAR

END_FUNCTION
#pragma warning(default:73);

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL OPC_UA_Interface::CB_CloseSession
	VAR_INPUT
		pApplicationUri 	: ^void;
	END_VAR

END_FUNCTION
#pragma warning(default:73);

