//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include "..\..\Class\OPC_UA_EncryptionBase\custom\encryption_utilities_st.h"

(*!
<Class
	Name               = "OPC_UA_EncryptionBase"
	Revision           = "1.0"
	GUID               = "{3B0C8F11-376E-4BFA-9286-96EF871F6AD1}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Singleton          = "true">
	<Channels>
		<Server
			Name           = "ClassSvr"
			GUID           = "{DBB6732B-6C05-4818-8B61-F53ECF3CA08A}"
			Visualized     = "false"
			Initialize     = "false"
			WriteProtected = "true"
			Retentive      = "false"
			Comment        = "0 = the encryption interface could not be initialized. Maybe the wrong class is in use for the current CPU.&#13;&#10;1 = the encryption interface was found">
			<NewInst>
				<Function Name="GetVersion" Comment="Returns the internal version of the supported security features.&#13;&#10;If called before 3rd init run, the version 0 and state ERROR will be returned.&#13;&#10;&#13;&#10;This function is not intended for use in the user application.">
					<OutputParameter>
						<Parameter Name="ret_code"/>
						<Parameter Name="version"/>
					</OutputParameter>
				</Function>
			</NewInst>
		</Server>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\OPC_UA_EncryptionBase\custom\encryption_utilities_st.h" Include="true"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.0" Date="2023-02-23" Author="ZoePat" Company="Sigmatek" Description="creation"/>
	</RevDoku>
</Class>
*)
OPC_UA_EncryptionBase : CLASS
	TYPE
	  CmdClassSvr :  //! <Type Public="true" Name="CmdClassSvr"/>
	  (
	    GetVersion
	  )$UINT;
	  Ref_sigclib : ^SigCLib;  //! <Type Comment="Reference to SigCLib to be able to use the functions avaliable there." Name="Ref_sigclib"/>
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
		InitCount 	: DINT;
  //Functions:
	
	FUNCTION OPC_UA_EncryptionBase
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment="Returns the internal version of the supported security features.&#13;&#10;If called before 3rd init run, the version 0 and state ERROR will be returned.&#13;&#10;&#13;&#10;This function is not intended for use in the user application." Name="ClassSvr.GetVersion"/>
	FUNCTION ClassSvr::GetVersion
		VAR_INPUT
			version 	: ^DINT;
		END_VAR
		VAR_OUTPUT
			ret_code 	: IprStates;
		END_VAR;
				//! <Function Name="ClassSvr.NewInst" Hidden="true" UseBaseCmd="true"/>
	FUNCTION VIRTUAL GLOBAL ClassSvr::NewInst
		VAR_INPUT
			pPara 	: ^CmdStruct;
			pResult 	: ^results;
		END_VAR
		VAR_OUTPUT
			ret_code 	: iprStates;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB OPC_UA_EncryptionBase::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_OPC_UA_ENCRYPTIONBASE
1$UINT, 0$UINT, (SIZEOF(::OPC_UA_EncryptionBase))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1478821999), "OPC_UA_EncryptionBase", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::OPC_UA_EncryptionBase.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_OPC_UA_EncryptionBase 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_OPC_UA_EncryptionBase] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION OPC_UA_EncryptionBase::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_OPC_UA_EncryptionBase, pCmd := #vmt.CmdTable);
	vmt.CmdTable.NewInstr		:= #NewInst();
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ret_code	:= OPC_UA_EncryptionBase();

END_FUNCTION

#pragma usingLtd SigCLib

//{{LSL_IMPLEMENTATION
//{{LSL_HIDDEN_FUNCTION
FUNCTION VIRTUAL GLOBAL OPC_UA_EncryptionBase::ClassSvr::NewInst
	VAR_INPUT
		pPara 	: ^CmdStruct;
		pResult 	: ^Results;
	END_VAR
	VAR_OUTPUT
		ret_code 	: IprStates;
	END_VAR
	CASE pPara^.uiCmd$CmdClassSvr OF
		GetVersion:
			ret_code := GetVersion((#pResult^.aData[0])$^DINT);
			pResult^.uiLng := 4 + sizeof(pResult^.uiLng);
	ELSE

	ret_code := READY;
	END_CASE;


END_FUNCTION
//}}LSL_HIDDEN_FUNCTION
//{{LSL_ENCRYPTION 16#800
2CF8D667F342212FF2412A957A14F9950AA75AE5A2C9189F4A884D633250DE825DB2CA2CC79079CB97B08EA6530BCF144E40B88B23D64BCBD389A274CD7A9B1C1BC18FFBF137728C46D9D8AF70E4CCCFEA6C4CA466F6856B4CD688A30E5E97F7701677AA
A67384E44F37992EDA2438D07CFE2915B6666436E82F26805352F39A2BA04CD27F296DD5E02DCD3D33AA780DA82EF62AD378AACA2C8F60ABCB153F760966B9A9BF527D4A08670DA0D846CAF8D9433BB85ED98D68FF1638E92B885F89639B3D0A87913095
278C06F8D9BE6469C8E6352467973219ED79CA6CC45ECA2E4E415A0AC74E65FAA371D640BC82C2F17164D91D67857E8839D627B0C50966E87E25E2841463456E3BF97D8E40F1E1A7E6179FE050066FC63E0050505ECDACB2626E46CC9BD00AC81C8B0D62
90D2AE3E5D14BBD1F1AC17FF19D045C0F2A472A20EACB2690B1985027B3128C595188BA65E1261E705F21F440B22A3FFCE1706143FDE56C1768B04A5DF52BC359D7549183A2151E5597C6842D02EC4E8CEA42EC26FE7D39510748A332FE4E4C48E928C84
9652EDEEFC977C98CC7B3F48497651B2DE60EF4147350B34EA1731FB438BC2E0C80F1A4EE4A4A4E6E955447EDF784EEBFA4A474F38749D8B2EC170BD4DAAFC529080DB351E56D82F4ADEE9C5A5CA1ED07682ACB5AD797275405793D24E7C9253AD7D40F9
7D9B6506978B3A28BE46E8A63679022CE2A7ABB1F4762F3A8692A48004C583CECC41A206BB67D77CC48F9F4B2FB3293E0DDB1A49311E0CB1CAF76ED36E75CBE0FB7715353C8B7A8B9D19B3F2E42E7953F56DA41AECCDABAD586BE9BC94538D6AE9E9FAB4
E3F0EBB827523AE40F6401432AE8BE8044A367841AD0FE331EE1A29485C27EC3A3D65ED92FC4C7676A5E77A4CF7263DFA42947F98F9B2D930C97329FECD147F61818E71DAFE0030DA7997774D9247257DCAA0908A01258DB9D4B75D92403C0FBD0E6CF4F
78F8E331710930DFFF37FCDE75471CED914605613874BB14EB56811D9F8A4AC6EA8CA003A86653D7BA5C12123E43627EC0AB3DC975E2D3234793F9C7EAAEE500B49110A80CD629F39627C6DB26B78ABAB3DAA41C030C5489214852BE4E49719DBBB8AB24
245D38D4697E2657D2E00F05C5E43060F049FB9B233BB9918C3018060E263735BF5C8E6E387D513038FFCC3B8741F8118C60ECD249AC55C473ABD9B4A446DFD6EF6EB40DE10BBE6E24301FDEB9739A27FDAD6999F2628C4EC2192025AB03FDC9EB261151
46A3FC02E762269B0F0F6657685EFC41858640CE695E4FE9BC610EEE56F8065A614C7C991FD543D50B6FFB80AF9DF93766EDD477D12F153163CEE1E9C5181921131E5DDE529ECD4C829753AA3A8562DC5B8C2B9FE2E5CEF2773DA347B364F809E25357C6
DED52A02C201985EDC47E6CCDF2726A5DCF79DFC8506B33E237072CDFED79BE3753D7DA9B4D0F9B5D329516161FCBB0302475F7B651B1E55E54C7DA474831C5A2B972E0AE06A8C0BDD6BACB34F3B2B1AD3095DB6306B6FE7383BCA3F4CF24052C200D5A1
2F76BA53B67F8715081D62A3996A81B2733328B41BF43616B8501219D638E4E4112BDD3B4033B8E6BF5BA5A000F0FC10842D08B6BE9EB38CA2040B7ED292ACD9AF7F3EE905D5C54B0FD6704AAD0C5CBFE6C9DE788A35413121B56F2D1E69569199D741F7
DA43097980F6EDE81CEFF0EBF934167F1B21288A3E21B1C1602AE3C05AB56C43AFBCB36BE0A54443DBB87E7DE7E02E159AF53258F86D0E13E555852D5FA53E82E47109835F596B897EC7D1652F4D557E031224645B64C9366BF89F8DFF0D6B9CF210D4EB
23D8CD911E2512A3C9A3E0F9CE61AC9E907E92312FEA6256EEFD665088B29180EBED2CD815FA5211207D8EDF3798B4A273259DD60681C00E4FADBF7ECECD2C1A59F8926AF7437733E54B2A51D6703E4FAB35E9A782ABA0BEA175AA2C1865A957999CE614
BA2DD97E462DD4B5A91F3EC4915CF034A0BB9A04FB26C61A40B8B785513C665C176D47E047B57635