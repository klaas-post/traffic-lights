//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
TYPE
  _PVOIDL : ^USINT;
  ENV_Status :
  (
    ENV_NoVariableName,
    ENV_ValidValue,
    ENV_NoInterface,
    ENV_VariableNameNotFound,
    ENV_NoValueString
  )$UDINT;
  FeSetup : BDINT
  [
    1 Valid,  //! <Type Comment="must be 1 to Start FileEx work" Name="FeSetup.Valid"/>
    2 FileorRam,  //! <Type Comment="0= work in File 1= Work File" Name="FeSetup.FileorRam"/>
    3 EnableChecksum,  //! <Type Comment="0=no Checksum; 1=Calculate Checksum, increased write access on the CF card" Name="FeSetup.EnableChecksum"/>
    4 Encrypt,  //! <Type Comment="0=no encryption; 1=encrypt file, increased write access on the CF card" Name="FeSetup.Encrypt"/>
  ];
  IO_FLAG : BINT  //! <Type Comment="Status Flag für IO Daten" Name="IO_FLAG"/>
  [
    1 WrongHW,  //! <Type Comment="Falsche Hardware verbunden" Name="IO_FLAG.WrongHW"/>
    2 NoHW,  //! <Type Comment="Keine Hardware verbunden" Name="IO_FLAG.NoHW"/>
    3 NoCalibration,  //! <Type Comment="Keine Kalibrierungsdaten im Modul-EEPROM" Name="IO_FLAG.NoCalibration"/>
    4 ParaChkWrong,  //! <Type Comment="Die Parameter-Checksumme ist falsch" Name="IO_FLAG.ParaChkWrong"/>
    5 PhysicHiLimit,  //! <Type Comment="IO ist am oberen physikalischen Limit" Name="IO_FLAG.PhysicHiLimit"/>
    6 PhysicLoLimit,  //! <Type Comment="IO ist am unteren physikalischen Limit" Name="IO_FLAG.PhysicLoLimit"/>
    7 Invert,  //! <Type Comment="Daten sind invertiert" Name="IO_FLAG.Invert"/>
    14 OnDummyMode,  //! <Type Comment="1 = Objekt ist im Dummymodus (nicht refreshed)" Name="IO_FLAG.OnDummyMode"/>
    15 NotConnected,  //! <Type Comment="1 = Objekt ist nicht verbunden" Name="IO_FLAG.NotConnected"/>
    16 PhysicAccessOff,  //! <Type Comment="1 = kein physikalischer Zugriff erlaubt" Name="IO_FLAG.PhysicAccessOff"/>
  ];
#pragma pack(push, 1)
  IO_State : STRUCT
    uiIO_Flags : IO_FLAG;
    uiChNo : UINT;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_TimeStamp : STRUCT
    valLow : UDINT;
    valHigh : DINT;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_Alarm : STRUCT
    TimeStamp : OPCUA_TimeStamp;
    Cycle : UDINT;
    Active : DINT;
    Number : ^CHAR;
    Description : ^CHAR;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_AlarmUC : STRUCT
    TimeStamp : OPCUA_TimeStamp;
    Cycle : UDINT;
    Active : DINT;
    Number : ^UINT;
    Description : ^UINT;
  END_STRUCT;
#pragma pack(pop)
  OPCUA_ArrayType_Enum :  //! <Type Comment="Defines if the data value represents a scalar value or an array." Name="OPCUA_ArrayType_Enum"/>
  (
    OpcUa_VariantArrayType_Scalar,  //! <Type Comment="The data value represents a scalar value." Name="OPCUA_ArrayType_Enum.OpcUa_VariantArrayType_Scalar"/>
    OpcUa_VariantArrayType_Array,  //! <Type Comment="The data value represents an array." Name="OPCUA_ArrayType_Enum.OpcUa_VariantArrayType_Array"/>
    OpcUa_VariantArrayType_Matrix  //! <Type Comment="The data value represents a matrix." Name="OPCUA_ArrayType_Enum.OpcUa_VariantArrayType_Matrix"/>
  )$INT;
#pragma pack(push, 1)
  OPCUA_Change : STRUCT
    TimeStamp : OPCUA_TimeStamp;
    Cycle : UDINT;
    DatasetId : ^CHAR;
    Dataset : ^CHAR;
    ParameterId : ^CHAR;
    UserId : ^CHAR;
    User : ^CHAR;
    Reason : ^CHAR;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_ChangeUC : STRUCT
    TimeStamp : OPCUA_TimeStamp;
    Cycle : UDINT;
    DatasetId : ^CHAR;
    Dataset : ^CHAR;
    ParameterId : ^CHAR;
    UserId : ^UINT;
    User : ^UINT;
    Reason : ^UINT;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_ClientDiagnosticInfo : STRUCT
    ApplicationUri : ^CHAR;  //! <Type Comment="Client / session application uri." Name="OPCUA_ClientDiagnosticInfo.ApplicationUri"/>
    ApplicationName : ^CHAR;  //! <Type Comment="Client / session application name." Name="OPCUA_ClientDiagnosticInfo.ApplicationName"/>
    Start : OPCUA_TimeStamp;  //! <Type Comment="Timestamp when the client created the session." Name="OPCUA_ClientDiagnosticInfo.Start"/>
    LastTransfer : OPCUA_TimeStamp;  //! <Type Comment="Timestamp when the client exchanged some data with the server (regardless which kind of information)" Name="OPCUA_ClientDiagnosticInfo.LastTransfer"/>
    ItemsBrowsed : UDINT;  //! <Type Comment="Information about how much items have been browsed in the session." Name="OPCUA_ClientDiagnosticInfo.ItemsBrowsed"/>
    ItemsRead : UDINT;  //! <Type Comment="Information about how much items have been read in the session." Name="OPCUA_ClientDiagnosticInfo.ItemsRead"/>
    ItemsWritten : UDINT;  //! <Type Comment="Information about how much items have been written in the session." Name="OPCUA_ClientDiagnosticInfo.ItemsWritten"/>
    NextDiagnosticInfo : ^void;  //! <Type Comment="Pointer to the next item in the list." Name="OPCUA_ClientDiagnosticInfo.NextDiagnosticInfo"/>
  END_STRUCT;
#pragma pack(pop)
  OPCUA_DataTypeId :
  (
    Boolean:=1,
    Int8:=2,
    Int16:=4,
    Int32:=6,
    Int64:=8,
    UInt8:=3,
    UInt16:=5,
    UInt32:=7,
    UInt64:=9,
    Float:=10,
    Double:=11,
    Text:=12,
    OPC_DateTime:=13,
    OPC_ByteString:=15,
    OPC_LocalizedText:=21,
    OPC_TimeZoneData:=8912,
    OPC_NodeId:=17,
    OPC_EnumValueType:=7594,
    ExtensionObject:=22,
    MemoryBoolean:=1000001,
    MemoryInt8:=1000002,
    MemoryInt16:=1000004,
    MemoryInt32:=1000006,
    MemoryUInt8:=1000003,
    MemoryUInt16:=1000005,
    MemoryUInt32:=1000007,
    MemoryFloat:=1000010,
    MemoryDouble:=1000011,
    MemoryText:=1000012,
    MemoryOPC_DateTime:=1000013,
    MemoryOPC_ByteString:=1000015,
    MemoryOPC_LocalizedText:=1000021,
    MemoryOPC_TimeZoneData:=1008912,
    MemoryOPC_NodeId:=1000017,
    MemoryExtensionObject:=1000022,
    ServerPointsToBoolean:=2000001,
    ServerPointsToInt8:=2000002,
    ServerPointsToInt16:=2000004,
    ServerPointsToInt32,
    ServerPointsToUInt8:=2000003,
    ServerPointsToUInt16:=2000005,
    ServerPointsToUInt32:=2000007,
    ServerPointsToFloat:=2000010,
    ServerPointsToDouble:=2000011,
    ServerPointsToText:=2000012,
    ServerPointsToOPC_DateTime:=2000013,
    ServerPointsToOPC_ByteString:=2000015,
    ServerPointsToOPC_LocalizedText:=2000021,
    ServerPointsToOPC_TimeZoneData:=2008912,
    ServerPointsToOPC_NodeId:=2000017,
    ServerPointsToExtensionObject:=2000022
  )$UDINT;
  OPCUA_MessageSecurityMode_Enum :
  (
    OPCUA_SecurityMode_None:=1,
    OPCUA_SecurityMode_Sign:=2,
    OPCUA_SecurityMode_SignAndEncrypt:=3
  )$UDINT;
#pragma pack(push, 1)
  OPCUA_NodeId : STRUCT  //! <Type Comment="Representing an OpcUa_NodeId in Lasal. There are only two types of identifier defined: numeric, and string identifier." Name="OPCUA_NodeId"/>
    IdentifierType : UINT;  //! <Type Comment="The node id has one of the following types:&#13;&#10;&#13;&#10;0..Numeric identifier&#13;&#10;1..String identifier&#13;&#10;2..Numeric identifier" Name="OPCUA_NodeId.IdentifierType"/>
    NamespaceIndex : UINT;  //! <Type Comment="Namespace of the node id." Name="OPCUA_NodeId.NamespaceIndex"/>
    NumericIdentifier : UDINT;  //! <Type Comment="The numeric identifier." Name="OPCUA_NodeId.NumericIdentifier"/>
    StringIdentifier : ^CHAR;  //! <Type Comment="The string identifier." Name="OPCUA_NodeId.StringIdentifier"/>
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_NodeInfo : STRUCT
    NodeId : OPCUA_NodeId;
    DataTypeId : OPCUA_DataTypeId;
    LasalId : UDINT;
  END_STRUCT;
#pragma pack(pop)
  OPCUA_SecurityPolicy_Enum :
  (
    OPCUA_SecurityPolicy_None:=0,
    OPCUA_SecurityPolicy_Basic256:=1,
    OPCUA_SecurityPolicy_Basic256Sha256,  //! <Type Comment="This algorithm requires Salamander OS with a minimum version of 09.03.160" Name="OPCUA_SecurityPolicy_Enum.OPCUA_SecurityPolicy_Basic256Sha256"/>
    OPCUA_SecurityPolicy_Aes128Sha256Rsa0aep  //! <Type Comment="This algorithm requires Salamander OS with a minimum version of 09.03.160" Name="OPCUA_SecurityPolicy_Enum.OPCUA_SecurityPolicy_Aes128Sha256Rsa0aep"/>
  )$UDINT;
#pragma pack(push, 1)
  OPCUA_RemoteServerDescription : STRUCT
    Id : ^CHAR;
    Url : ^CHAR;  //! <Type Comment="DEPRECATED: Do not use the URL anymore. The only relevant information is the Endpoint defined in this type." Name="OPCUA_RemoteServerDescription.Url"/>
    Endpoint : ^CHAR;
    MessageSecurityMode : OPCUA_MessageSecurityMode_Enum;
    SecurityPolicy : OPCUA_SecurityPolicy_Enum;
    User : ^CHAR;
    Password : ^CHAR;
    ConnectionHandle : UDINT;
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  OPCUA_StandardAlarm : STRUCT
    TimeOn : OPCUA_TimeStamp;
    TimeOff : OPCUA_TimeStamp;
    Number : DINT;
    Active : DINT;
    Acknowledged : DINT;
    Typ : DINT;
    Para1 : REAL;
    Para2 : REAL;
    Para3 : REAL;
    Description : ^CHAR;
  END_STRUCT;
#pragma pack(pop)
  pHwBase : ^HwBase;
  pHwBaseCDIAS : ^HwBaseCDIAS;
  ptrOPCUA_Alarm : ^OPCUA_Alarm;
  ptrOPCUA_AlarmUC : ^OPCUA_AlarmUC;
  ptrOPCUA_ClientDiagnosticInfo : ^OPCUA_ClientDiagnosticInfo;
  ptrOPCUA_NodeId : ^OPCUA_NodeId;
  ptrOPCUA_NodeInfo : ^OPCUA_NodeInfo;
  ptrOPCUA_RemoteServerDescription : ^OPCUA_RemoteServerDescription;
  ptrOPCUA_StandardAlarm : ^OPCUA_StandardAlarm;
  SafetyConfigStateType :
  (
    _ModuleNotFound,
    _SafetyClassOK,
    _ReinitConfig,
    _UnsafeVarNotFound,
    _ModFromCfgNotFound,
    _MemAllocFailed,
    _ReadFWVerFailed,
    _UnknownCfgError,
    _WaitForSynchronicity,
    _AsyncComError:=9,
    _DOsIncreasedRestartApp:=10,
    _LostPowerSupply:=11,
    _WrongSafetyHW:=12
  )$UDINT;
#pragma pack(push, 1)
  SafetyDiagInfo : STRUCT
    uControllerID : USINT;  //! <Type Comment="ID of µController (0 = µC1, else µC2)" Name="SafetyDiagInfo.uControllerID"/>
    ActErrorCode : USINT;  //! <Type Comment="actual error code" Name="SafetyDiagInfo.ActErrorCode"/>
    FirstErrorCode : USINT;  //! <Type Comment="code of first error that lead to an error state" Name="SafetyDiagInfo.FirstErrorCode"/>
    ReasonCode0 : UDINT;  //! <Type Comment="reason for error (meaning depends on actual error code)" Name="SafetyDiagInfo.ReasonCode0"/>
    ReasonCode1 : UDINT;  //! <Type Comment="reason for error (meaning depends on actual error code)" Name="SafetyDiagInfo.ReasonCode1"/>
  END_STRUCT;
#pragma pack(pop)
#pragma pack(push, 1)
  SafetyDiagState : STRUCT
    RunState : USINT;  //! <Type Comment=" 1..POST&#13;&#10; 2..SERVICE&#13;&#10; 4..ERROR&#13;&#10; 8..IDLE&#13;&#10;16..CHK_CFG&#13;&#10;32..OP_TEMP&#13;&#10;64..OP" Name="SafetyDiagState.RunState"/>
    ConfigState : USINT;  //! <Type Comment=" 1..INVALID&#13;&#10; 2..NOT_CONFIGURED&#13;&#10; 4..CONFIGURED_NOT_DEPLOYED_NOT_VERIFIED&#13;&#10; 8..CONFIGURED_AND_VERIFIED&#13;&#10;16..CONFIGURED_DEPLOYED_NOT_VERIFIED&#13;&#10;36..CONFIGURED_NOT_DEPLOYED_NOT_VERIFIED_DEV&#13;&#10;48..CONFIGURED_DEPLOYED_NOT_VERIFIED_DEV" Name="SafetyDiagState.ConfigState"/>
    LoginLevel : USINT;  //! <Type Comment="0..not logged in&#13;&#10;1..debug&#13;&#10;2..configuration&#13;&#10;3..general" Name="SafetyDiagState.LoginLevel"/>
    ErrorCounterIOState : UINT;  //! <Type Comment="Is increased on change of the error state of any input or output" Name="SafetyDiagState.ErrorCounterIOState"/>
  END_STRUCT;
#pragma pack(pop)
  t_e_VaranErrors :
  (
    _ClassOk,
    _NotInitialized,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._NotInitialized"/>
    _CallBackError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._CallBackError"/>
    _RequiredError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._RequiredError"/>
    _RootError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._RootError"/>
    _NoHardware,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._NoHardware"/>
    _WrongHardware,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._WrongHardware"/>
    _CreateDOFailed,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._CreateDOFailed"/>
    _DirectAccessFailed,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._DirectAccessFailed"/>
    _PllError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._PllError"/>
    _TimeoutInInit,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._TimeoutInInit"/>
    _HardwareRequiredIRQ,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._HardwareRequiredIRQ"/>
    _HardwareNotRequiredIRQ,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._HardwareNotRequiredIRQ"/>
    _HardwareFatalErrorIRQ,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._HardwareFatalErrorIRQ"/>
    _ManagerError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._ManagerError"/>
    _DisableError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._DisableError"/>
    _EnableError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._EnableError"/>
    _MultipleError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._MultipleError"/>
    _SPIError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._SPIError"/>
    _ErrorBootImageFPGA,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._ErrorBootImageFPGA"/>
    _NoCDIASInterface,  //! <Type Comment="for CIV class" Name="t_e_VaranErrors._NoCDIASInterface"/>
    _EEPromError,  //! <Type Comment="for CIV class" Name="t_e_VaranErrors._EEPromError"/>
    _NoVaranInterface,  //! <Type Comment="for VaranMaster" Name="t_e_VaranErrors._NoVaranInterface"/>
    _MemoryFault,  //! <Type Comment="for VaranMaster" Name="t_e_VaranErrors._MemoryFault"/>
    _TimesliceError,  //! <Type Comment="for VaranMaster" Name="t_e_VaranErrors._TimesliceError"/>
    _TimesliceErrorIRQ,  //! <Type Comment="for VaranMaster" Name="t_e_VaranErrors._TimesliceErrorIRQ"/>
    _WatchdogError,  //! <Type Comment="for VaranMaster" Name="t_e_VaranErrors._WatchdogError"/>
    _VaranTimeError,  //! <Type Comment="for HwControl class" Name="t_e_VaranErrors._VaranTimeError"/>
    _DiasTimeError,  //! <Type Comment="for HwControl class" Name="t_e_VaranErrors._DiasTimeError"/>
    _DORamFull,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._DORamFull"/>
    _PortNoLink,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._PortNoLink"/>
    _VaranDriverNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._VaranDriverNotExists"/>
    _WrongDOLType,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._WrongDOLType"/>
    _WrongRunStatus,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._WrongRunStatus"/>
    _DOHandleInvalid,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._DOHandleInvalid"/>
    _DOCmdInvalid,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._DOCmdInvalid"/>
    _ManagerNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._ManagerNotExists"/>
    _DOLAddressInvalid,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._DOLAddressInvalid"/>
    _UnknownCommand,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._UnknownCommand"/>
    _ComponentNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._ComponentNotExists"/>
    _ClientNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._ClientNotExists"/>
    _CdiasEEPromNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._CdiasEEPromNotExists"/>
    _CdiasEEPromNoGrant,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._CdiasEEPromNoGrant"/>
    _CdiasEEPromNack,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._CdiasEEPromNack"/>
    _PortNotExists,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._PortNotExists"/>
    _PortIsUplink,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._PortIsUplink"/>
    _NoMutex,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._NoMutex"/>
    _NoTask,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._NoTask"/>
    _IDNotFound,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._IDNotFound"/>
    _IDNotInitialized,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._IDNotInitialized"/>
    _InvalidDeviceAddress,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._InvalidDeviceAddress"/>
    _CallbackNotHandled,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._CallbackNotHandled"/>
    _NoMem,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._NoMem"/>
    _NoLegacyWd,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._NoLegacyWd"/>
    _AdminDOLExecutionError,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._AdminDOLExecutionError"/>
    _DADOLExecutionError,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._DADOLExecutionError"/>
    _SPIFlashNoAccess,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._SPIFlashNoAccess"/>
    _ClientNotready,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._ClientNotready"/>
    _TimeoutVaran,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._TimeoutVaran"/>
    _UnknownFault,  //! <Type Comment="from VaranManager" Name="t_e_VaranErrors._UnknownFault"/>
    _DiasError,  //! <Type Comment="for CIC/DIV with Dias" Name="t_e_VaranErrors._DiasError"/>
    _DeviceError,  //! <Type Comment="for Varan hardwareclasses" Name="t_e_VaranErrors._DeviceError"/>
    _VaranTimeWarning,
    _OnlyASYSupported,
    _InvalidSerialNo,
    _CDIASRequiredError,
    _DIASRequiredError,
    _NoCalibDataFound,
    _ModuleFoundButManagerIsOff:=68,
    _InvalidConfguration,
    _ClientDisabled,
    _ClientCantEnable,
    _CdiasAddressInvalid,
    _SPIFlashInvalid,
    _SPIDOLIDInvalid,
    _SPIDOLInvalid,
    _SPIRequiredListError,
    _SPIChksumError,
    _ParameterInvalid,
    _DOTypeNotSupported,
    _DMAError,
    _PropertyIDInvalid,
    _PropertyValueInvalid,
    _DONumberOverflow,
    _APIUsageNotAllowed,
    _NodeTypeWrong,
    _DataLengthInvalid,
    _DOTypeInvalid,
    _OperationNotAllowed,
    _NodeNumberOverflow,
    _NoHandleFound,
    _TopologyNotAllowed
  )$UDINT;
#pragma pack(push, 1)
  t_s_ModulInfo : STRUCT
    Kennung : HINT;
    p_This : ^void;
  END_STRUCT;
#pragma pack(pop)
END_TYPE
